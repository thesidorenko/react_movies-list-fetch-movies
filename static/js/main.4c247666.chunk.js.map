{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","imgUrl","title","description","imdbUrl","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","imdbId","normalizeMovieData","movieData","Poster","Title","Plot","concat","imdbID","FindMovie","setMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","isLoadingMovie","setIsLoadingMovie","_useState5","_useState6","error","setError","useEffect","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","trim","query","fetch","then","res","json","catch","Response","Error","sent","t0","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","newMovie","uniqueMovie","find","item","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c247666.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nfunction normalizeMovieData(movieData: MovieData): Movie {\n  const DEFAULT_POSTER_URL\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const imgUrl = movieData.Poster !== 'N/A'\n    ? movieData.Poster : DEFAULT_POSTER_URL;\n\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n    imdbId: movieData.imdbID,\n  };\n}\n\ninterface Props {\n  movie: Movie | null,\n  setMovie: (movie: Movie | null) => void,\n  addMovie: (movie: Movie | null) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ movie, setMovie, addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [isLoadingMovie, setIsLoadingMovie] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setError(false);\n  }, [title]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      if (title.trim()) {\n        setIsLoadingMovie(true);\n\n        const response: MovieData | ResponseError = await getMovie(title);\n\n        if ('Error' in response) {\n          setError(true);\n        } else {\n          setError(false);\n          setMovie(normalizeMovieData(response));\n        }\n      }\n    } catch (err) {\n      setError(true);\n    } finally {\n      setIsLoadingMovie(false);\n    }\n  };\n\n  const handleAddMovie = () => {\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              // className=\"input\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </div>\n\n          {error && title && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoadingMovie,\n              })}\n              disabled={!title}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {(error || movie) && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=43238c58';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const addMovie = (newMovie: Movie | null) => {\n    const uniqueMovie = movies.find(item => item.imdbId === newMovie?.imdbId);\n\n    if (newMovie && !uniqueMovie) {\n      setMovies((prevMovies) => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={movie}\n          setMovie={setMovie}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}